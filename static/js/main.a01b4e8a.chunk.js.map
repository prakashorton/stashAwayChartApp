{"version":3,"sources":["utils/chartData.js","utils/getOption.js","utils/chartContext.js","utils/loadChart.js","components/filterPane.js","components/chart.js","components/chartHeader.js","utils/constant.js","components/chartOverview.js","components/App.js","index.js"],"names":["expectedRiskReturnComparison","apiVersion","timestamp","tenantName","riskReturnAnalyticResponse","portfolioName","portfolioExpectedRisk","portfolioExpectedReturn","historicalPerformanceComparison","portfolios","portfolioHistoricalPerformance","value","date","dataSource","JSON","parse","stringify","portfolioData","getAllPortfolios","map","m","getOption","dateRange","currency","p1","p2","mulValue","histDataP1","filter","obj","sort","reverse","histDataP2","categories","months","data","currentDate","Date","month","getMonth","push","index","parseInt","slice","forEach","indexOf","ChartContext","React","createContext","options","dateR","cur","currentChartOption","tooltip","valueSuffix","series","name","xAxis","tickInterval","labels","formatter","this","Option","Select","Filterpane","useContext","filterType","option","setOption","firstPortfolio","secondPortfolio","setSecondPortfolio","useState","setPortfolios","useEffect","allPortfolios","splice","po","key","Fragment","className","style","color","width","defaultActiveFirstOption","onChange","evt","loadChart","onChangeBenchMark","Chart","console","log","window","dispatchEvent","Event","highcharts","Highcharts","ChartHeader","setCurrency","setFilterType","Group","buttonStyle","target","Button","float","chart","type","backgroundColor","borderRadius","title","text","subtitle","yAxis","crosshairs","shared","plotOptions","dataGrouping","forced","units","spline","marker","radius","lineColor","lineWidth","legend","itemStyle","ChartOverview","setFirstPortfolio","optionData","Provider","Content","Layout","Footer","App","padding","margin","textAlign","render","document","getElementById"],"mappings":"qNAAe,GACbA,6BAA8B,CAC5BC,WAAY,KACZC,UAAW,uBACXC,WAAY,UACZC,2BAA4B,CAC1B,CACEC,cAAe,kDACfC,sBAAuB,QACvBC,wBAAyB,QAE3B,CACEF,cAAe,iDACfC,sBAAuB,QACvBC,wBAAyB,SAE3B,CACEF,cAAe,kDACfC,sBAAuB,QACvBC,wBAAyB,SAI/BC,gCAAiC,CAC/BP,WAAY,KACZC,UAAW,uBACXC,WAAY,UACZM,WAAY,CACV,CACEJ,cAAe,kDACfK,+BAAgC,CAC9B,CACEC,MAAO,KACPC,KAAM,cAER,CACED,MAAO,MACPC,KAAM,cAER,CACED,MAAO,MACPC,KAAM,cAER,CACED,MAAO,MACPC,KAAM,cAER,CACED,MAAO,IACPC,KAAM,cAER,CACED,MAAO,WACPC,KAAM,cAER,CACED,MAAO,WACPC,KAAM,cAER,CACED,MAAO,WACPC,KAAM,cAER,CACED,MAAO,WACPC,KAAM,cAER,CACED,MAAO,WACPC,KAAM,cAER,CACED,MAAO,WACPC,KAAM,cAER,CACED,MAAO,WACPC,KAAM,cAER,CACED,MAAO,WACPC,KAAM,cAER,CACED,MAAO,WACPC,KAAM,cAER,CACED,MAAO,WACPC,KAAM,cAER,CACED,MAAO,UACPC,KAAM,cAER,CACED,MAAO,WACPC,KAAM,cAER,CACED,MAAO,WACPC,KAAM,cAER,CACED,MAAO,WACPC,KAAM,cAER,CACED,MAAO,WACPC,KAAM,cAER,CACED,MAAO,WACPC,KAAM,cAER,CACED,MAAO,WACPC,KAAM,cAER,CACED,MAAO,WACPC,KAAM,cAER,CACED,MAAO,WACPC,KAAM,cAER,CACED,MAAO,WACPC,KAAM,cAER,CACED,MAAO,WACPC,KAAM,cAER,CACED,MAAO,WACPC,KAAM,cAER,CACED,MAAO,WACPC,KAAM,cAER,CACED,MAAO,UACPC,KAAM,cAER,CACED,MAAO,WACPC,KAAM,cAER,CACED,MAAO,WACPC,KAAM,cAER,CACED,MAAO,WACPC,KAAM,cAER,CACED,MAAO,WACPC,KAAM,cAER,CACED,MAAO,WACPC,KAAM,cAER,CACED,MAAO,WACPC,KAAM,cAER,CACED,MAAO,WACPC,KAAM,cAER,CACED,MAAO,WACPC,KAAM,cAER,CACED,MAAO,WACPC,KAAM,cAER,CACED,MAAO,WACPC,KAAM,cAER,CACED,MAAO,WACPC,KAAM,cAER,CACED,MAAO,WACPC,KAAM,cAER,CACED,MAAO,WACPC,KAAM,cAER,CACED,MAAO,WACPC,KAAM,cAER,CACED,MAAO,WACPC,KAAM,cAER,CACED,MAAO,WACPC,KAAM,cAER,CACED,MAAO,WACPC,KAAM,cAER,CACED,MAAO,UACPC,KAAM,cAER,CACED,MAAO,WACPC,KAAM,cAER,CACED,MAAO,WACPC,KAAM,cAER,CACED,MAAO,WACPC,KAAM,cAER,CACED,MAAO,WACPC,KAAM,cAER,CACED,MAAO,QACPC,KAAM,cAER,CACED,MAAO,WACPC,KAAM,cAER,CACED,MAAO,WACPC,KAAM,cAER,CACED,MAAO,UACPC,KAAM,cAER,CACED,MAAO,UACPC,KAAM,cAER,CACED,MAAO,WACPC,KAAM,cAER,CACED,MAAO,WACPC,KAAM,cAER,CACED,MAAO,WACPC,KAAM,cAER,CACED,MAAO,WACPC,KAAM,cAER,CACED,MAAO,WACPC,KAAM,cAER,CACED,MAAO,WACPC,KAAM,cAER,CACED,MAAO,UACPC,KAAM,cAER,CACED,MAAO,WACPC,KAAM,cAER,CACED,MAAO,WACPC,KAAM,cAER,CACED,MAAO,WACPC,KAAM,cAER,CACED,MAAO,UACPC,KAAM,cAER,CACED,MAAO,WACPC,KAAM,cAER,CACED,MAAO,WACPC,KAAM,cAER,CACED,MAAO,WACPC,KAAM,cAER,CACED,MAAO,WACPC,KAAM,cAER,CACED,MAAO,WACPC,KAAM,cAER,CACED,MAAO,WACPC,KAAM,cAER,CACED,MAAO,WACPC,KAAM,cAER,CACED,MAAO,WACPC,KAAM,cAER,CACED,MAAO,UACPC,KAAM,cAER,CACED,MAAO,WACPC,KAAM,cAER,CACED,MAAO,WACPC,KAAM,cAER,CACED,MAAO,WACPC,KAAM,cAER,CACED,MAAO,WACPC,KAAM,cAER,CACED,MAAO,WACPC,KAAM,cAER,CACED,MAAO,WACPC,KAAM,cAER,CACED,MAAO,WACPC,KAAM,cAER,CACED,MAAO,WACPC,KAAM,cAER,CACED,MAAO,WACPC,KAAM,gBAIZ,CACEP,cAAe,iDACfK,+BAAgC,CAC9B,CACEC,MAAO,KACPC,KAAM,cAER,CACED,MAAO,MACPC,KAAM,cAER,CACED,MAAO,MACPC,KAAM,cAER,CACED,MAAO,MACPC,KAAM,cAER,CACED,MAAO,IACPC,KAAM,cAER,CACED,MAAO,WACPC,KAAM,cAER,CACED,MAAO,WACPC,KAAM,cAER,CACED,MAAO,WACPC,KAAM,cAER,CACED,MAAO,WACPC,KAAM,cAER,CACED,MAAO,WACPC,KAAM,cAER,CACED,MAAO,WACPC,KAAM,cAER,CACED,MAAO,WACPC,KAAM,cAER,CACED,MAAO,UACPC,KAAM,cAER,CACED,MAAO,WACPC,KAAM,cAER,CACED,MAAO,WACPC,KAAM,cAER,CACED,MAAO,WACPC,KAAM,cAER,CACED,MAAO,WACPC,KAAM,cAER,CACED,MAAO,WACPC,KAAM,cAER,CACED,MAAO,WACPC,KAAM,cAER,CACED,MAAO,WACPC,KAAM,cAER,CACED,MAAO,UACPC,KAAM,cAER,CACED,MAAO,WACPC,KAAM,cAER,CACED,MAAO,WACPC,KAAM,cAER,CACED,MAAO,WACPC,KAAM,cAER,CACED,MAAO,WACPC,KAAM,cAER,CACED,MAAO,UACPC,KAAM,cAER,CACED,MAAO,WACPC,KAAM,cAER,CACED,MAAO,WACPC,KAAM,cAER,CACED,MAAO,WACPC,KAAM,cAER,CACED,MAAO,WACPC,KAAM,cAER,CACED,MAAO,WACPC,KAAM,cAER,CACED,MAAO,WACPC,KAAM,cAER,CACED,MAAO,WACPC,KAAM,cAER,CACED,MAAO,WACPC,KAAM,cAER,CACED,MAAO,WACPC,KAAM,cAER,CACED,MAAO,WACPC,KAAM,cAER,CACED,MAAO,UACPC,KAAM,cAER,CACED,MAAO,WACPC,KAAM,cAER,CACED,MAAO,WACPC,KAAM,cAER,CACED,MAAO,WACPC,KAAM,cAER,CACED,MAAO,UACPC,KAAM,cAER,CACED,MAAO,WACPC,KAAM,cAER,CACED,MAAO,WACPC,KAAM,cAER,CACED,MAAO,WACPC,KAAM,cAER,CACED,MAAO,WACPC,KAAM,cAER,CACED,MAAO,WACPC,KAAM,cAER,CACED,MAAO,UACPC,KAAM,cAER,CACED,MAAO,WACPC,KAAM,cAER,CACED,MAAO,WACPC,KAAM,cAER,CACED,MAAO,WACPC,KAAM,cAER,CACED,MAAO,WACPC,KAAM,cAER,CACED,MAAO,WACPC,KAAM,cAER,CACED,MAAO,WACPC,KAAM,cAER,CACED,MAAO,WACPC,KAAM,cAER,CACED,MAAO,WACPC,KAAM,cAER,CACED,MAAO,WACPC,KAAM,cAER,CACED,MAAO,WACPC,KAAM,cAER,CACED,MAAO,WACPC,KAAM,cAER,CACED,MAAO,WACPC,KAAM,cAER,CACED,MAAO,WACPC,KAAM,cAER,CACED,MAAO,WACPC,KAAM,cAER,CACED,MAAO,WACPC,KAAM,cAER,CACED,MAAO,WACPC,KAAM,cAER,CACED,MAAO,WACPC,KAAM,cAER,CACED,MAAO,WACPC,KAAM,cAER,CACED,MAAO,WACPC,KAAM,cAER,CACED,MAAO,UACPC,KAAM,cAER,CACED,MAAO,WACPC,KAAM,cAER,CACED,MAAO,WACPC,KAAM,cAER,CACED,MAAO,WACPC,KAAM,cAER,CACED,MAAO,WACPC,KAAM,cAER,CACED,MAAO,WACPC,KAAM,cAER,CACED,MAAO,WACPC,KAAM,cAER,CACED,MAAO,WACPC,KAAM,cAER,CACED,MAAO,WACPC,KAAM,cAER,CACED,MAAO,UACPC,KAAM,cAER,CACED,MAAO,WACPC,KAAM,cAER,CACED,MAAO,WACPC,KAAM,cAER,CACED,MAAO,WACPC,KAAM,cAER,CACED,MAAO,WACPC,KAAM,cAER,CACED,MAAO,WACPC,KAAM,cAER,CACED,MAAO,WACPC,KAAM,cAER,CACED,MAAO,WACPC,KAAM,cAER,CACED,MAAO,WACPC,KAAM,cAER,CACED,MAAO,WACPC,KAAM,gBAIZ,CACEP,cAAe,kDACfK,+BAAgC,CAC9B,CACEC,MAAO,KACPC,KAAM,cAER,CACED,MAAO,MACPC,KAAM,cAER,CACED,MAAO,MACPC,KAAM,cAER,CACED,MAAO,MACPC,KAAM,cAER,CACED,MAAO,IACPC,KAAM,cAER,CACED,MAAO,WACPC,KAAM,cAER,CACED,MAAO,WACPC,KAAM,cAER,CACED,MAAO,WACPC,KAAM,cAER,CACED,MAAO,WACPC,KAAM,cAER,CACED,MAAO,WACPC,KAAM,cAER,CACED,MAAO,UACPC,KAAM,cAER,CACED,MAAO,WACPC,KAAM,cAER,CACED,MAAO,WACPC,KAAM,cAER,CACED,MAAO,WACPC,KAAM,cAER,CACED,MAAO,WACPC,KAAM,cAER,CACED,MAAO,WACPC,KAAM,cAER,CACED,MAAO,WACPC,KAAM,cAER,CACED,MAAO,WACPC,KAAM,cAER,CACED,MAAO,WACPC,KAAM,cAER,CACED,MAAO,WACPC,KAAM,cAER,CACED,MAAO,WACPC,KAAM,cAER,CACED,MAAO,WACPC,KAAM,cAER,CACED,MAAO,WACPC,KAAM,cAER,CACED,MAAO,WACPC,KAAM,cAER,CACED,MAAO,WACPC,KAAM,cAER,CACED,MAAO,WACPC,KAAM,cAER,CACED,MAAO,WACPC,KAAM,cAER,CACED,MAAO,WACPC,KAAM,cAER,CACED,MAAO,UACPC,KAAM,cAER,CACED,MAAO,UACPC,KAAM,cAER,CACED,MAAO,UACPC,KAAM,cAER,CACED,MAAO,UACPC,KAAM,cAER,CACED,MAAO,UACPC,KAAM,cAER,CACED,MAAO,UACPC,KAAM,cAER,CACED,MAAO,UACPC,KAAM,cAER,CACED,MAAO,UACPC,KAAM,cAER,CACED,MAAO,UACPC,KAAM,cAER,CACED,MAAO,SACPC,KAAM,cAER,CACED,MAAO,UACPC,KAAM,cAER,CACED,MAAO,WACPC,KAAM,cAER,CACED,MAAO,WACPC,KAAM,cAER,CACED,MAAO,WACPC,KAAM,cAER,CACED,MAAO,UACPC,KAAM,cAER,CACED,MAAO,WACPC,KAAM,cAER,CACED,MAAO,WACPC,KAAM,cAER,CACED,MAAO,WACPC,KAAM,cAER,CACED,MAAO,WACPC,KAAM,cAER,CACED,MAAO,WACPC,KAAM,cAER,CACED,MAAO,WACPC,KAAM,cAER,CACED,MAAO,UACPC,KAAM,cAER,CACED,MAAO,WACPC,KAAM,cAER,CACED,MAAO,WACPC,KAAM,cAER,CACED,MAAO,UACPC,KAAM,cAER,CACED,MAAO,WACPC,KAAM,cAER,CACED,MAAO,WACPC,KAAM,cAER,CACED,MAAO,WACPC,KAAM,cAER,CACED,MAAO,SACPC,KAAM,cAER,CACED,MAAO,UACPC,KAAM,cAER,CACED,MAAO,WACPC,KAAM,cAER,CACED,MAAO,WACPC,KAAM,cAER,CACED,MAAO,WACPC,KAAM,cAER,CACED,MAAO,WACPC,KAAM,cAER,CACED,MAAO,WACPC,KAAM,cAER,CACED,MAAO,WACPC,KAAM,cAER,CACED,MAAO,WACPC,KAAM,cAER,CACED,MAAO,WACPC,KAAM,cAER,CACED,MAAO,UACPC,KAAM,cAER,CACED,MAAO,WACPC,KAAM,cAER,CACED,MAAO,WACPC,KAAM,cAER,CACED,MAAO,WACPC,KAAM,cAER,CACED,MAAO,WACPC,KAAM,cAER,CACED,MAAO,WACPC,KAAM,cAER,CACED,MAAO,WACPC,KAAM,cAER,CACED,MAAO,WACPC,KAAM,cAER,CACED,MAAO,WACPC,KAAM,cAER,CACED,MAAO,UACPC,KAAM,cAER,CACED,MAAO,WACPC,KAAM,cAER,CACED,MAAO,WACPC,KAAM,cAER,CACED,MAAO,WACPC,KAAM,cAER,CACED,MAAO,WACPC,KAAM,cAER,CACED,MAAO,WACPC,KAAM,cAER,CACED,MAAO,WACPC,KAAM,cAER,CACED,MAAO,WACPC,KAAM,cAER,CACED,M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","file":"static/js/main.a01b4e8a.chunk.js","sourcesContent":["export default {\r\n  expectedRiskReturnComparison: {\r\n    apiVersion: \"v1\",\r\n    timestamp: \"Oct 03, 2018 7:10 PM\",\r\n    tenantName: \"asidemo\",\r\n    riskReturnAnalyticResponse: [\r\n      {\r\n        portfolioName: \"StashAway Risk Index 6.5% 5% Equity - 95% Bonds\",\r\n        portfolioExpectedRisk: 10.6614,\r\n        portfolioExpectedReturn: 6.5418,\r\n      },\r\n      {\r\n        portfolioName: \"StashAway Risk Index 8% 10% Equity - 90% Bonds\",\r\n        portfolioExpectedRisk: 10.1539,\r\n        portfolioExpectedReturn: 10.6241,\r\n      },\r\n      {\r\n        portfolioName: \"StashAway Risk Index 10% 20% Equity - 80% Bonds\",\r\n        portfolioExpectedRisk: 15.7725,\r\n        portfolioExpectedReturn: 4.005,\r\n      },\r\n    ],\r\n  },\r\n  historicalPerformanceComparison: {\r\n    apiVersion: \"v1\",\r\n    timestamp: \"Oct 03, 2018 7:10 PM\",\r\n    tenantName: \"asidemo\",\r\n    portfolios: [\r\n      {\r\n        portfolioName: \"StashAway Risk Index 6.5% 5% Equity - 95% Bonds\",\r\n        portfolioHistoricalPerformance: [\r\n          {\r\n            value: 12000,\r\n            date: \"2013-04-30\",\r\n          },\r\n          {\r\n            value: 12300,\r\n            date: \"2013-05-30\",\r\n          },\r\n          {\r\n            value: 13200,\r\n            date: \"2013-06-30\",\r\n          },\r\n          {\r\n            value: 10400,\r\n            date: \"2013-07-30\",\r\n          },\r\n          {\r\n            value: 10000,\r\n            date: \"2013-08-30\",\r\n          },\r\n          {\r\n            value: 10330.2049,\r\n            date: \"2013-09-30\",\r\n          },\r\n          {\r\n            value: 10665.4838,\r\n            date: \"2013-10-31\",\r\n          },\r\n          {\r\n            value: 10720.8638,\r\n            date: \"2013-11-30\",\r\n          },\r\n          {\r\n            value: 10764.8167,\r\n            date: \"2013-12-31\",\r\n          },\r\n          {\r\n            value: 10402.0707,\r\n            date: \"2014-01-31\",\r\n          },\r\n          {\r\n            value: 10678.3952,\r\n            date: \"2014-02-28\",\r\n          },\r\n          {\r\n            value: 10820.7131,\r\n            date: \"2014-03-31\",\r\n          },\r\n          {\r\n            value: 10860.4257,\r\n            date: \"2014-04-30\",\r\n          },\r\n          {\r\n            value: 11076.6852,\r\n            date: \"2014-05-31\",\r\n          },\r\n          {\r\n            value: 11263.0422,\r\n            date: \"2014-06-30\",\r\n          },\r\n          {\r\n            value: 11283.701,\r\n            date: \"2014-07-31\",\r\n          },\r\n          {\r\n            value: 11532.8975,\r\n            date: \"2014-08-31\",\r\n          },\r\n          {\r\n            value: 11190.8052,\r\n            date: \"2014-09-30\",\r\n          },\r\n          {\r\n            value: 11326.6254,\r\n            date: \"2014-10-31\",\r\n          },\r\n          {\r\n            value: 11385.8877,\r\n            date: \"2014-11-30\",\r\n          },\r\n          {\r\n            value: 11213.6808,\r\n            date: \"2014-12-31\",\r\n          },\r\n          {\r\n            value: 11119.4149,\r\n            date: \"2015-01-31\",\r\n          },\r\n          {\r\n            value: 11446.6669,\r\n            date: \"2015-02-28\",\r\n          },\r\n          {\r\n            value: 11335.6872,\r\n            date: \"2015-03-31\",\r\n          },\r\n          {\r\n            value: 11642.6932,\r\n            date: \"2015-04-30\",\r\n          },\r\n          {\r\n            value: 11549.7054,\r\n            date: \"2015-05-31\",\r\n          },\r\n          {\r\n            value: 11385.3767,\r\n            date: \"2015-06-30\",\r\n          },\r\n          {\r\n            value: 11232.2544,\r\n            date: \"2015-07-31\",\r\n          },\r\n          {\r\n            value: 10684.657,\r\n            date: \"2015-08-31\",\r\n          },\r\n          {\r\n            value: 10486.7882,\r\n            date: \"2015-09-30\",\r\n          },\r\n          {\r\n            value: 11027.4201,\r\n            date: \"2015-10-31\",\r\n          },\r\n          {\r\n            value: 10900.1114,\r\n            date: \"2015-11-30\",\r\n          },\r\n          {\r\n            value: 10758.7308,\r\n            date: \"2015-12-31\",\r\n          },\r\n          {\r\n            value: 10342.4019,\r\n            date: \"2016-01-31\",\r\n          },\r\n          {\r\n            value: 10325.4169,\r\n            date: \"2016-02-29\",\r\n          },\r\n          {\r\n            value: 10998.2904,\r\n            date: \"2016-03-31\",\r\n          },\r\n          {\r\n            value: 11039.6604,\r\n            date: \"2016-04-30\",\r\n          },\r\n          {\r\n            value: 10970.7909,\r\n            date: \"2016-05-31\",\r\n          },\r\n          {\r\n            value: 11125.3049,\r\n            date: \"2016-06-30\",\r\n          },\r\n          {\r\n            value: 11458.3489,\r\n            date: \"2016-07-31\",\r\n          },\r\n          {\r\n            value: 11565.7722,\r\n            date: \"2016-08-31\",\r\n          },\r\n          {\r\n            value: 11623.7877,\r\n            date: \"2016-09-30\",\r\n          },\r\n          {\r\n            value: 11567.7365,\r\n            date: \"2016-10-31\",\r\n          },\r\n          {\r\n            value: 11533.9271,\r\n            date: \"2016-11-30\",\r\n          },\r\n          {\r\n            value: 11628.5387,\r\n            date: \"2016-12-31\",\r\n          },\r\n          {\r\n            value: 11910.5894,\r\n            date: \"2017-01-31\",\r\n          },\r\n          {\r\n            value: 12199.267,\r\n            date: \"2017-02-28\",\r\n          },\r\n          {\r\n            value: 12308.2391,\r\n            date: \"2017-03-31\",\r\n          },\r\n          {\r\n            value: 12450.4296,\r\n            date: \"2017-04-30\",\r\n          },\r\n          {\r\n            value: 12629.8067,\r\n            date: \"2017-05-31\",\r\n          },\r\n          {\r\n            value: 12711.5973,\r\n            date: \"2017-06-30\",\r\n          },\r\n          {\r\n            value: 13074.8,\r\n            date: \"2017-07-31\",\r\n          },\r\n          {\r\n            value: 13206.6086,\r\n            date: \"2017-08-31\",\r\n          },\r\n          {\r\n            value: 13285.3968,\r\n            date: \"2017-09-30\",\r\n          },\r\n          {\r\n            value: 13547.239,\r\n            date: \"2017-10-31\",\r\n          },\r\n          {\r\n            value: 13697.505,\r\n            date: \"2017-11-30\",\r\n          },\r\n          {\r\n            value: 13922.5647,\r\n            date: \"2017-12-31\",\r\n          },\r\n          {\r\n            value: 14590.0814,\r\n            date: \"2018-01-31\",\r\n          },\r\n          {\r\n            value: 14175.2403,\r\n            date: \"2018-02-28\",\r\n          },\r\n          {\r\n            value: 13958.5535,\r\n            date: \"2018-03-31\",\r\n          },\r\n          {\r\n            value: 13975.2927,\r\n            date: \"2018-04-30\",\r\n          },\r\n          {\r\n            value: 13938.6698,\r\n            date: \"2018-05-31\",\r\n          },\r\n          {\r\n            value: 13790.367,\r\n            date: \"2018-06-30\",\r\n          },\r\n          {\r\n            value: 14074.8931,\r\n            date: \"2018-07-31\",\r\n          },\r\n          {\r\n            value: 14140.0732,\r\n            date: \"2018-08-31\",\r\n          },\r\n          {\r\n            value: 14938.6698,\r\n            date: \"2018-09-30\",\r\n          },\r\n          {\r\n            value: 14070.367,\r\n            date: \"2018-10-31\",\r\n          },\r\n          {\r\n            value: 14074.8931,\r\n            date: \"2018-11-30\",\r\n          },\r\n          {\r\n            value: 14140.0732,\r\n            date: \"2018-12-31\",\r\n          },\r\n          {\r\n            value: 10982.0907,\r\n            date: \"2019-01-31\",\r\n          },\r\n          {\r\n            value: 10228.3222,\r\n            date: \"2019-02-28\",\r\n          },\r\n          {\r\n            value: 13230.7231,\r\n            date: \"2019-03-31\",\r\n          },\r\n          {\r\n            value: 10920.4257,\r\n            date: \"2019-04-30\",\r\n          },\r\n          {\r\n            value: 11226.6852,\r\n            date: \"2019-05-31\",\r\n          },\r\n          {\r\n            value: 11123.0422,\r\n            date: \"2019-06-30\",\r\n          },\r\n          {\r\n            value: 10333.701,\r\n            date: \"2019-07-31\",\r\n          },\r\n          {\r\n            value: 10892.8975,\r\n            date: \"2019-08-31\",\r\n          },\r\n          {\r\n            value: 13080.8052,\r\n            date: \"2019-09-30\",\r\n          },\r\n          {\r\n            value: 11216.6254,\r\n            date: \"2019-10-31\",\r\n          },\r\n          {\r\n            value: 11785.8877,\r\n            date: \"2019-11-30\",\r\n          },\r\n          {\r\n            value: 11268.6808,\r\n            date: \"2019-12-31\",\r\n          },\r\n          {\r\n            value: 12580.8052,\r\n            date: \"2020-01-31\",\r\n          },\r\n          {\r\n            value: 12216.6254,\r\n            date: \"2020-02-28\",\r\n          },\r\n          {\r\n            value: 12785.8877,\r\n            date: \"2020-03-31\",\r\n          },\r\n          {\r\n            value: 12968.6808,\r\n            date: \"2020-04-30\",\r\n          },\r\n        ],\r\n      },\r\n      {\r\n        portfolioName: \"StashAway Risk Index 8% 10% Equity - 90% Bonds\",\r\n        portfolioHistoricalPerformance: [\r\n          {\r\n            value: 12000,\r\n            date: \"2013-04-30\",\r\n          },\r\n          {\r\n            value: 12300,\r\n            date: \"2013-05-30\",\r\n          },\r\n          {\r\n            value: 13200,\r\n            date: \"2013-06-30\",\r\n          },\r\n          {\r\n            value: 10400,\r\n            date: \"2013-07-30\",\r\n          },\r\n          {\r\n            value: 10000,\r\n            date: \"2013-08-30\",\r\n          },\r\n          {\r\n            value: 10275.6227,\r\n            date: \"2013-09-30\",\r\n          },\r\n          {\r\n            value: 10674.0555,\r\n            date: \"2013-10-31\",\r\n          },\r\n          {\r\n            value: 10942.5541,\r\n            date: \"2013-11-30\",\r\n          },\r\n          {\r\n            value: 11179.0766,\r\n            date: \"2013-12-31\",\r\n          },\r\n          {\r\n            value: 10862.8252,\r\n            date: \"2014-01-31\",\r\n          },\r\n          {\r\n            value: 11264.2423,\r\n            date: \"2014-02-28\",\r\n          },\r\n          {\r\n            value: 11347.9696,\r\n            date: \"2014-03-31\",\r\n          },\r\n          {\r\n            value: 11412.242,\r\n            date: \"2014-04-30\",\r\n          },\r\n          {\r\n            value: 11631.0396,\r\n            date: \"2014-05-31\",\r\n          },\r\n          {\r\n            value: 11839.7652,\r\n            date: \"2014-06-30\",\r\n          },\r\n          {\r\n            value: 11699.9743,\r\n            date: \"2014-07-31\",\r\n          },\r\n          {\r\n            value: 12090.5468,\r\n            date: \"2014-08-31\",\r\n          },\r\n          {\r\n            value: 11941.2961,\r\n            date: \"2014-09-30\",\r\n          },\r\n          {\r\n            value: 12181.5752,\r\n            date: \"2014-10-31\",\r\n          },\r\n          {\r\n            value: 12431.4147,\r\n            date: \"2014-11-30\",\r\n          },\r\n          {\r\n            value: 12406.627,\r\n            date: \"2014-12-31\",\r\n          },\r\n          {\r\n            value: 12110.6059,\r\n            date: \"2015-01-31\",\r\n          },\r\n          {\r\n            value: 12678.9481,\r\n            date: \"2015-02-28\",\r\n          },\r\n          {\r\n            value: 12520.7057,\r\n            date: \"2015-03-31\",\r\n          },\r\n          {\r\n            value: 12619.5459,\r\n            date: \"2015-04-30\",\r\n          },\r\n          {\r\n            value: 12764.642,\r\n            date: \"2015-05-31\",\r\n          },\r\n          {\r\n            value: 12575.0658,\r\n            date: \"2015-06-30\",\r\n          },\r\n          {\r\n            value: 12801.6072,\r\n            date: \"2015-07-31\",\r\n          },\r\n          {\r\n            value: 12148.8156,\r\n            date: \"2015-08-31\",\r\n          },\r\n          {\r\n            value: 11891.9087,\r\n            date: \"2015-09-30\",\r\n          },\r\n          {\r\n            value: 12712.6637,\r\n            date: \"2015-10-31\",\r\n          },\r\n          {\r\n            value: 12759.2084,\r\n            date: \"2015-11-30\",\r\n          },\r\n          {\r\n            value: 12577.8653,\r\n            date: \"2015-12-31\",\r\n          },\r\n          {\r\n            value: 12045.4452,\r\n            date: \"2016-01-31\",\r\n          },\r\n          {\r\n            value: 12009.9683,\r\n            date: \"2016-02-29\",\r\n          },\r\n          {\r\n            value: 12681.6219,\r\n            date: \"2016-03-31\",\r\n          },\r\n          {\r\n            value: 12737.072,\r\n            date: \"2016-04-30\",\r\n          },\r\n          {\r\n            value: 12927.5773,\r\n            date: \"2016-05-31\",\r\n          },\r\n          {\r\n            value: 12948.4966,\r\n            date: \"2016-06-30\",\r\n          },\r\n          {\r\n            value: 13348.7117,\r\n            date: \"2016-07-31\",\r\n          },\r\n          {\r\n            value: 13373.114,\r\n            date: \"2016-08-31\",\r\n          },\r\n          {\r\n            value: 13389.7024,\r\n            date: \"2016-09-30\",\r\n          },\r\n          {\r\n            value: 13201.0514,\r\n            date: \"2016-10-31\",\r\n          },\r\n          {\r\n            value: 13614.4431,\r\n            date: \"2016-11-30\",\r\n          },\r\n          {\r\n            value: 13848.6203,\r\n            date: \"2016-12-31\",\r\n          },\r\n          {\r\n            value: 14062.8834,\r\n            date: \"2017-01-31\",\r\n          },\r\n          {\r\n            value: 14534.476,\r\n            date: \"2017-02-28\",\r\n          },\r\n          {\r\n            value: 14547.5719,\r\n            date: \"2017-03-31\",\r\n          },\r\n          {\r\n            value: 14683.3979,\r\n            date: \"2017-04-30\",\r\n          },\r\n          {\r\n            value: 14827.4117,\r\n            date: \"2017-05-31\",\r\n          },\r\n          {\r\n            value: 14918.2445,\r\n            date: \"2017-06-30\",\r\n          },\r\n          {\r\n            value: 15180.0086,\r\n            date: \"2017-07-31\",\r\n          },\r\n          {\r\n            value: 15242.8521,\r\n            date: \"2017-08-31\",\r\n          },\r\n          {\r\n            value: 15504.6721,\r\n            date: \"2017-09-30\",\r\n          },\r\n          {\r\n            value: 15801.4143,\r\n            date: \"2017-10-31\",\r\n          },\r\n          {\r\n            value: 16192.4043,\r\n            date: \"2017-11-30\",\r\n          },\r\n          {\r\n            value: 16349.9525,\r\n            date: \"2017-12-31\",\r\n          },\r\n          {\r\n            value: 17115.0681,\r\n            date: \"2018-01-31\",\r\n          },\r\n          {\r\n            value: 16595.8911,\r\n            date: \"2018-02-28\",\r\n          },\r\n          {\r\n            value: 16239.9966,\r\n            date: \"2018-03-31\",\r\n          },\r\n          {\r\n            value: 16313.6146,\r\n            date: \"2018-04-30\",\r\n          },\r\n          {\r\n            value: 16669.8527,\r\n            date: \"2018-05-31\",\r\n          },\r\n          {\r\n            value: 16765.4938,\r\n            date: \"2018-06-30\",\r\n          },\r\n          {\r\n            value: 17270.8481,\r\n            date: \"2018-07-31\",\r\n          },\r\n          {\r\n            value: 17779.3969,\r\n            date: \"2018-08-31\",\r\n          },\r\n          {\r\n            value: 14678.6667,\r\n            date: \"2018-09-30\",\r\n          },\r\n          {\r\n            value: 14070.367,\r\n            date: \"2018-10-31\",\r\n          },\r\n          {\r\n            value: 14074.8931,\r\n            date: \"2018-11-30\",\r\n          },\r\n          {\r\n            value: 14140.0732,\r\n            date: \"2018-12-31\",\r\n          },\r\n          {\r\n            value: 15672.0907,\r\n            date: \"2019-01-31\",\r\n          },\r\n          {\r\n            value: 15876.3222,\r\n            date: \"2019-02-28\",\r\n          },\r\n          {\r\n            value: 15678.7231,\r\n            date: \"2019-03-31\",\r\n          },\r\n          {\r\n            value: 15920.4257,\r\n            date: \"2019-04-30\",\r\n          },\r\n          {\r\n            value: 15226.6852,\r\n            date: \"2019-05-31\",\r\n          },\r\n          {\r\n            value: 15123.0422,\r\n            date: \"2019-06-30\",\r\n          },\r\n          {\r\n            value: 15333.701,\r\n            date: \"2019-07-31\",\r\n          },\r\n          {\r\n            value: 15892.8975,\r\n            date: \"2019-08-31\",\r\n          },\r\n          {\r\n            value: 15080.8052,\r\n            date: \"2019-09-30\",\r\n          },\r\n          {\r\n            value: 15216.6254,\r\n            date: \"2019-10-31\",\r\n          },\r\n          {\r\n            value: 15785.8877,\r\n            date: \"2019-11-30\",\r\n          },\r\n          {\r\n            value: 15268.6808,\r\n            date: \"2019-12-31\",\r\n          },\r\n          {\r\n            value: 16580.8052,\r\n            date: \"2020-01-31\",\r\n          },\r\n          {\r\n            value: 16216.6254,\r\n            date: \"2020-02-28\",\r\n          },\r\n          {\r\n            value: 16785.8877,\r\n            date: \"2020-03-31\",\r\n          },\r\n          {\r\n            value: 16968.6808,\r\n            date: \"2020-04-30\",\r\n          },\r\n        ],\r\n      },\r\n      {\r\n        portfolioName: \"StashAway Risk Index 10% 20% Equity - 80% Bonds\",\r\n        portfolioHistoricalPerformance: [\r\n          {\r\n            value: 12000,\r\n            date: \"2013-04-30\",\r\n          },\r\n          {\r\n            value: 12300,\r\n            date: \"2013-05-30\",\r\n          },\r\n          {\r\n            value: 13200,\r\n            date: \"2013-06-30\",\r\n          },\r\n          {\r\n            value: 10400,\r\n            date: \"2013-07-30\",\r\n          },\r\n          {\r\n            value: 10000,\r\n            date: \"2013-08-30\",\r\n          },\r\n          {\r\n            value: 10534.7566,\r\n            date: \"2013-09-30\",\r\n          },\r\n          {\r\n            value: 10959.4545,\r\n            date: \"2013-10-31\",\r\n          },\r\n          {\r\n            value: 10826.6167,\r\n            date: \"2013-11-30\",\r\n          },\r\n          {\r\n            value: 10697.3701,\r\n            date: \"2013-12-31\",\r\n          },\r\n          {\r\n            value: 10122.9328,\r\n            date: \"2014-01-31\",\r\n          },\r\n          {\r\n            value: 10399.763,\r\n            date: \"2014-02-28\",\r\n          },\r\n          {\r\n            value: 10665.1729,\r\n            date: \"2014-03-31\",\r\n          },\r\n          {\r\n            value: 10698.1875,\r\n            date: \"2014-04-30\",\r\n          },\r\n          {\r\n            value: 11010.1699,\r\n            date: \"2014-05-31\",\r\n          },\r\n          {\r\n            value: 11258.6095,\r\n            date: \"2014-06-30\",\r\n          },\r\n          {\r\n            value: 11448.9527,\r\n            date: \"2014-07-31\",\r\n          },\r\n          {\r\n            value: 11669.8857,\r\n            date: \"2014-08-31\",\r\n          },\r\n          {\r\n            value: 10964.2009,\r\n            date: \"2014-09-30\",\r\n          },\r\n          {\r\n            value: 11069.5214,\r\n            date: \"2014-10-31\",\r\n          },\r\n          {\r\n            value: 10975.4722,\r\n            date: \"2014-11-30\",\r\n          },\r\n          {\r\n            value: 10571.6372,\r\n            date: \"2014-12-31\",\r\n          },\r\n          {\r\n            value: 10623.0399,\r\n            date: \"2015-01-31\",\r\n          },\r\n          {\r\n            value: 10887.2645,\r\n            date: \"2015-02-28\",\r\n          },\r\n          {\r\n            value: 10764.3572,\r\n            date: \"2015-03-31\",\r\n          },\r\n          {\r\n            value: 11431.3307,\r\n            date: \"2015-04-30\",\r\n          },\r\n          {\r\n            value: 11060.3236,\r\n            date: \"2015-05-31\",\r\n          },\r\n          {\r\n            value: 10835.0211,\r\n            date: \"2015-06-30\",\r\n          },\r\n          {\r\n            value: 10236.3024,\r\n            date: \"2015-07-31\",\r\n          },\r\n          {\r\n            value: 9505.5245,\r\n            date: \"2015-08-31\",\r\n          },\r\n          {\r\n            value: 9274.4375,\r\n            date: \"2015-09-30\",\r\n          },\r\n          {\r\n            value: 9813.1234,\r\n            date: \"2015-10-31\",\r\n          },\r\n          {\r\n            value: 9498.4347,\r\n            date: \"2015-11-30\",\r\n          },\r\n          {\r\n            value: 9330.1451,\r\n            date: \"2015-12-31\",\r\n          },\r\n          {\r\n            value: 8837.4864,\r\n            date: \"2016-01-31\",\r\n          },\r\n          {\r\n            value: 8827.0778,\r\n            date: \"2016-02-29\",\r\n          },\r\n          {\r\n            value: 9768.8857,\r\n            date: \"2016-03-31\",\r\n          },\r\n          {\r\n            value: 9814.6774,\r\n            date: \"2016-04-30\",\r\n          },\r\n          {\r\n            value: 9514.879,\r\n            date: \"2016-05-31\",\r\n          },\r\n          {\r\n            value: 9834.2817,\r\n            date: \"2016-06-30\",\r\n          },\r\n          {\r\n            value: 10247.1439,\r\n            date: \"2016-07-31\",\r\n          },\r\n          {\r\n            value: 10461.9039,\r\n            date: \"2016-08-31\",\r\n          },\r\n          {\r\n            value: 10575.4957,\r\n            date: \"2016-09-30\",\r\n          },\r\n          {\r\n            value: 10597.428,\r\n            date: \"2016-10-31\",\r\n          },\r\n          {\r\n            value: 10198.1195,\r\n            date: \"2016-11-30\",\r\n          },\r\n          {\r\n            value: 10222.9608,\r\n            date: \"2016-12-31\",\r\n          },\r\n          {\r\n            value: 10679.4537,\r\n            date: \"2017-01-31\",\r\n          },\r\n          {\r\n            value: 10949.4687,\r\n            date: \"2017-02-28\",\r\n          },\r\n          {\r\n            value: 11180.3318,\r\n            date: \"2017-03-31\",\r\n          },\r\n          {\r\n            value: 11386.5605,\r\n            date: \"2017-04-30\",\r\n          },\r\n          {\r\n            value: 11669.742,\r\n            date: \"2017-05-31\",\r\n          },\r\n          {\r\n            value: 11776.2666,\r\n            date: \"2017-06-30\",\r\n          },\r\n          {\r\n            value: 12373.8678,\r\n            date: \"2017-07-31\",\r\n          },\r\n          {\r\n            value: 12612.903,\r\n            date: \"2017-08-31\",\r\n          },\r\n          {\r\n            value: 12576.1936,\r\n            date: \"2017-09-30\",\r\n          },\r\n          {\r\n            value: 12939.3188,\r\n            date: \"2017-10-31\",\r\n          },\r\n          {\r\n            value: 12963.2339,\r\n            date: \"2017-11-30\",\r\n          },\r\n          {\r\n            value: 13354.12,\r\n            date: \"2017-12-31\",\r\n          },\r\n          {\r\n            value: 14278.914,\r\n            date: \"2018-01-31\",\r\n          },\r\n          {\r\n            value: 13730.5845,\r\n            date: \"2018-02-28\",\r\n          },\r\n          {\r\n            value: 13509.0085,\r\n            date: \"2018-03-31\",\r\n          },\r\n          {\r\n            value: 13479.7868,\r\n            date: \"2018-04-30\",\r\n          },\r\n          {\r\n            value: 13090.3178,\r\n            date: \"2018-05-31\",\r\n          },\r\n          {\r\n            value: 12653.7783,\r\n            date: \"2018-06-30\",\r\n          },\r\n          {\r\n            value: 12893.5178,\r\n            date: \"2018-07-31\",\r\n          },\r\n          {\r\n            value: 12614.9946,\r\n            date: \"2018-08-31\",\r\n          },\r\n          {\r\n            value: 13678.6667,\r\n            date: \"2018-09-30\",\r\n          },\r\n          {\r\n            value: 13070.367,\r\n            date: \"2018-10-31\",\r\n          },\r\n          {\r\n            value: 13074.8931,\r\n            date: \"2018-11-30\",\r\n          },\r\n          {\r\n            value: 13140.0732,\r\n            date: \"2018-12-31\",\r\n          },\r\n          {\r\n            value: 14672.0907,\r\n            date: \"2019-01-31\",\r\n          },\r\n          {\r\n            value: 14876.3222,\r\n            date: \"2019-02-28\",\r\n          },\r\n          {\r\n            value: 14678.7231,\r\n            date: \"2019-03-31\",\r\n          },\r\n          {\r\n            value: 14920.4257,\r\n            date: \"2019-04-30\",\r\n          },\r\n          {\r\n            value: 14926.6852,\r\n            date: \"2019-05-31\",\r\n          },\r\n          {\r\n            value: 14923.0422,\r\n            date: \"2019-06-30\",\r\n          },\r\n          {\r\n            value: 14933.701,\r\n            date: \"2019-07-31\",\r\n          },\r\n          {\r\n            value: 14992.8975,\r\n            date: \"2019-08-31\",\r\n          },\r\n          {\r\n            value: 14380.8052,\r\n            date: \"2019-09-30\",\r\n          },\r\n          {\r\n            value: 14216.6254,\r\n            date: \"2019-10-31\",\r\n          },\r\n          {\r\n            value: 14785.8877,\r\n            date: \"2019-11-30\",\r\n          },\r\n          {\r\n            value: 14968.6808,\r\n            date: \"2019-12-31\",\r\n          },\r\n          {\r\n            value: 15280.8052,\r\n            date: \"2020-01-31\",\r\n          },\r\n          {\r\n            value: 15216.6254,\r\n            date: \"2020-02-28\",\r\n          },\r\n          {\r\n            value: 15785.8877,\r\n            date: \"2020-03-31\",\r\n          },\r\n          {\r\n            value: 15968.6808,\r\n            date: \"2020-04-30\",\r\n          },\r\n        ],\r\n      },\r\n    ],\r\n  },\r\n};\r\n","import portfolioData from \"../utils/chartData\";\r\n\r\nlet dataSource = JSON.parse(JSON.stringify(portfolioData));\r\n\r\nexport const getAllPortfolios = () =>\r\n  dataSource.expectedRiskReturnComparison.riskReturnAnalyticResponse.map(\r\n    (m) => m.portfolioName\r\n  );\r\n\r\nconst getOption = (dateRange, currency, p1, p2) => {\r\n  dataSource = JSON.parse(JSON.stringify(portfolioData));\r\n  const mulValue = currency === \"USD\" ? 0.71 : 1;\r\n  const histDataP1 = dataSource.historicalPerformanceComparison.portfolios\r\n    .filter((obj) => obj.portfolioName === p1)[0]\r\n    .portfolioHistoricalPerformance.sort()\r\n    .reverse();\r\n  const histDataP2 = dataSource.historicalPerformanceComparison.portfolios\r\n    .filter((obj) => obj.portfolioName === p2)[0]\r\n    .portfolioHistoricalPerformance.sort()\r\n    .reverse();\r\n  const categories = [];\r\n  const months = [\r\n    \"Jan\",\r\n    \"Feb\",\r\n    \"Mar\",\r\n    \"Apr\",\r\n    \"May\",\r\n    \"Jun\",\r\n    \"Jul\",\r\n    \"Aug\",\r\n    \"Sept\",\r\n    \"Oct\",\r\n    \"Nov\",\r\n    \"Dec\",\r\n  ];\r\n  const data = { p1: [], p2: [] };\r\n  const currentDate = new Date();\r\n  let month =\r\n    dateRange === \"1Y\"\r\n      ? 12\r\n      : dateRange === \"6M\"\r\n      ? 6\r\n      : dateRange === \"5Y\"\r\n      ? 61\r\n      : currentDate.getMonth() + 1;\r\n\r\n  if (dateRange === \"1Y\" || dateRange === \"YTD\" || dateRange === \"6M\") {\r\n    while (month) {\r\n      data.p1.push(histDataP1[month - 1].value * mulValue);\r\n      data.p2.push(histDataP2[month - 1].value * mulValue);\r\n      var index = parseInt(histDataP1[month - 1].date.slice(5, 7));\r\n      month--;\r\n      categories.push(months[index - 1]);\r\n    }\r\n  } else if (dateRange === \"5Y\") {\r\n    while (month) {\r\n      data.p1.push(histDataP1[month - 1].value * mulValue);\r\n      data.p2.push(histDataP2[month - 1].value * mulValue);\r\n      categories.push(histDataP1[month - 1].date);\r\n      month--;\r\n    }\r\n  } else if (dateRange === \"Max\") {\r\n    histDataP1.sort().reverse();\r\n    histDataP2.sort().reverse();\r\n    histDataP1.forEach((obj) => {\r\n      data.p1.push(obj.value * mulValue);\r\n      data.p2.push(histDataP2[histDataP1.indexOf(obj)].value * mulValue);\r\n      categories.push(obj.date);\r\n    });\r\n  }\r\n  return { categories, data };\r\n};\r\nexport default getOption;\r\n","import React from \"react\";\r\n\r\nexport const ChartContext = React.createContext({});\r\n","import getOption from \"./getOption\";\r\n\r\nconst months = [\r\n  \"Jan\",\r\n  \"Feb\",\r\n  \"Mar\",\r\n  \"Apr\",\r\n  \"May\",\r\n  \"Jun\",\r\n  \"Jul\",\r\n  \"Aug\",\r\n  \"Sept\",\r\n  \"Oct\",\r\n  \"Nov\",\r\n  \"Dec\",\r\n];\r\n\r\nexport default (options, dateR, cur, p1, p2) => {\r\n  const currentChartOption = getOption(dateR, cur, p1, p2);\r\n  options.tooltip.valueSuffix = \" \" + cur;\r\n  options.series[0].name = p1;\r\n  options.series[1].name = p2;\r\n  options.series[0].data = currentChartOption.data[\"p1\"];\r\n  options.series[1].data = currentChartOption.data[\"p2\"];\r\n  options.xAxis.categories = currentChartOption.categories;\r\n  if (dateR === \"5Y\" || dateR === \"Max\") {\r\n    options.xAxis.tickInterval = 12;\r\n    options.xAxis.labels.formatter = function () {\r\n      return `${\r\n        months[parseInt(this.value.slice(5, 7) - 1)]\r\n      } ${this.value.slice(0, 4)}`;\r\n    };\r\n  } else {\r\n    options.xAxis.tickInterval = 0;\r\n    options.xAxis.labels.formatter = function () {\r\n      return this.value;\r\n    };\r\n  }\r\n  return { ...options };\r\n};\r\n","import React, { useEffect, useState, useContext } from \"react\";\r\nimport { Select } from \"antd\";\r\nimport { getAllPortfolios } from \"../utils/getOption\";\r\nimport { ChartContext } from \"../utils/chartContext\";\r\nimport loadChart from \"../utils/loadChart\";\r\nconst { Option } = Select;\r\n\r\nfunction Filterpane() {\r\n  const {\r\n    currency,\r\n    filterType,\r\n    option,\r\n    setOption,\r\n    firstPortfolio,\r\n    secondPortfolio,\r\n    setSecondPortfolio,\r\n  } = useContext(ChartContext);\r\n  const [portfolios, setPortfolios] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const allPortfolios = getAllPortfolios();\r\n    setPortfolios(allPortfolios.splice(1));\r\n  }, []);\r\n\r\n  const onChangeBenchMark = (value) => {\r\n    setSecondPortfolio(value);\r\n    setOption(loadChart(option, filterType, currency, firstPortfolio, value));\r\n  };\r\n\r\n  const options = portfolios.map((po) => (\r\n    <Option key={po} value={po}>\r\n      {po}\r\n    </Option>\r\n  ));\r\n  return (\r\n    <React.Fragment>\r\n      <h3 className=\"paddingLeft25\">Portfolio Benchmark</h3>\r\n      <div className=\"container-fluid\">\r\n        <div className=\"row chartFilterPane\">\r\n          <p className=\"vs\">\r\n            <span className=\"rounded-circle vsSpan\">VS</span>\r\n          </p>\r\n          <div className=\"col-lg-6 leftPane rounded-left\">\r\n            <h5>General Investing</h5>\r\n            <h5 style={{ color: \"#2879d4\" }}>{firstPortfolio}</h5>\r\n          </div>\r\n          <div className=\"col-lg-6 rounded-right rightPane\">\r\n            <Select\r\n              style={{ width: \"88%\" }}\r\n              defaultActiveFirstOption={true}\r\n              value={secondPortfolio}\r\n              onChange={(value, evt) => {\r\n                onChangeBenchMark(value);\r\n              }}\r\n            >\r\n              {options}\r\n            </Select>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default Filterpane;\r\n","import React, { useContext, useEffect } from \"react\";\r\nimport Highcharts from \"highcharts\";\r\nimport HighchartsReact from \"highcharts-react-official\";\r\nimport { ChartContext } from \"../utils/chartContext\";\r\n\r\nfunction Chart() {\r\n  const { option } = useContext(ChartContext);\r\n\r\n  useEffect(() => {\r\n    console.log(option);\r\n    window.dispatchEvent(new Event('resize'));\r\n  }, []);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"container-fluid chartContainer\">\r\n        <HighchartsReact highcharts={Highcharts} options={option} />\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default Chart;\r\n","import React, { useContext } from \"react\";\r\nimport { Radio } from \"antd\";\r\nimport { ChartContext } from \"../utils/chartContext\";\r\nimport loadChart from \"../utils/loadChart\";\r\n\r\nfunction ChartHeader() {\r\n  const {\r\n    currency,\r\n    setCurrency,\r\n    filterType,\r\n    setFilterType,\r\n    option,\r\n    setOption,\r\n    firstPortfolio,\r\n    secondPortfolio,\r\n  } = useContext(ChartContext);\r\n\r\n  const onChangeFilterType = ({ target }) => {\r\n    setFilterType(target.value);\r\n    setOption(\r\n      loadChart(option, target.value, currency, firstPortfolio, secondPortfolio)\r\n    );\r\n  };\r\n\r\n  const onChangeCurrency = ({ target }) => {\r\n    setCurrency(target.value);\r\n    setOption(\r\n      loadChart(\r\n        option,\r\n        filterType,\r\n        target.value,\r\n        firstPortfolio,\r\n        secondPortfolio\r\n      )\r\n    );\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"container-fluid chartHeader\">\r\n        <Radio.Group\r\n          buttonStyle=\"solid\"\r\n          onChange={onChangeFilterType}\r\n          value={filterType}\r\n        >\r\n          <Radio.Button value=\"6M\">6 months </Radio.Button>\r\n          <Radio.Button value=\"YTD\">Year-to-date</Radio.Button>\r\n          <Radio.Button value=\"1Y\">1 year</Radio.Button>\r\n          <Radio.Button value=\"5Y\">5 years</Radio.Button>\r\n          <Radio.Button value=\"Max\">Max</Radio.Button>\r\n        </Radio.Group>\r\n        <Radio.Group\r\n          onChange={onChangeCurrency}\r\n          value={currency}\r\n          buttonStyle=\"solid\"\r\n          style={{ float: \"right\" }}\r\n        >\r\n          <Radio.Button value=\"SGD\">SGD</Radio.Button>\r\n          <Radio.Button value=\"USD\">USD</Radio.Button>\r\n        </Radio.Group>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default ChartHeader;\r\n","export default {\r\n  chart: {\r\n    type: \"spline\",\r\n    backgroundColor: \"#214761\",\r\n    borderRadius: '15'\r\n  },\r\n  title: {\r\n    text: \"Portfolio value based on gross returns\",\r\n    style: { color: \"#FFFFFF\" },\r\n  },\r\n  subtitle: {\r\n    text:\r\n      \"Gross returns and exchange rates sourced from Bloomberg as of April 2020\",\r\n    style: { color: \"#FFFFFF\" },\r\n  },\r\n  xAxis: {\r\n    labels: {\r\n      style: {\r\n        color: \"#FFFFFF\",\r\n      },\r\n    },\r\n    categories: [\r\n      \"Jan\",\r\n      \"Feb\",\r\n      \"Mar\",\r\n      \"Apr\",\r\n      \"May\",\r\n      \"Jun\",\r\n      \"Jul\",\r\n      \"Aug\",\r\n      \"Sep\",\r\n      \"Oct\",\r\n      \"Nov\",\r\n      \"Dec\",\r\n    ],\r\n  },\r\n  yAxis: {\r\n    title: {\r\n      style: {\r\n        color: \"#FFFFFF\",\r\n      },\r\n      text: \"value\",\r\n    },\r\n    labels: {\r\n      formatter: function () {\r\n        return this.value;\r\n      },\r\n      style: {\r\n        color: \"#FFFFFF\",\r\n      },\r\n    },\r\n  },\r\n  tooltip: {\r\n    crosshairs: true,\r\n    shared: true,\r\n  },\r\n  plotOptions: {\r\n    series: {\r\n      dataGrouping: {\r\n        forced: true,\r\n        units: [[\"month\", [12]]],\r\n      },\r\n    },\r\n    spline: {\r\n      marker: {\r\n        radius: 1,\r\n        lineColor: \"#666666\",\r\n        lineWidth: 1,\r\n      },\r\n    },\r\n  },\r\n  legend: {\r\n    itemStyle: {\r\n      color: \"#FFFFFF\",\r\n    },\r\n  },\r\n  series: [\r\n    {\r\n      name: \"stashAway risk index 14%\",\r\n      data: [],\r\n    },\r\n    {\r\n      name: \"40% VTMX(stock)\",\r\n      data: [],\r\n      color: \"#FFFF00\",\r\n    },\r\n  ],\r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\nimport FilterPane from \"./filterPane\";\r\nimport Chart from \"./chart\";\r\nimport ChartHeader from \"./chartHeader\";\r\nimport { ChartContext } from \"../utils/chartContext\";\r\nimport { getAllPortfolios } from \"../utils/getOption\";\r\nimport optionData from \"../utils/constant\";\r\nimport loadChart from \"../utils/loadChart\";\r\n\r\nfunction ChartOverview() {\r\n  const [currency, setCurrency] = useState(\"SGD\");\r\n  const [filterType, setFilterType] = useState(\"Max\");\r\n  const [firstPortfolio, setFirstPortfolio] = useState(\"\");\r\n  const [secondPortfolio, setSecondPortfolio] = useState(\"\");\r\n  const [option, setOption] = useState(optionData);\r\n\r\n  useEffect(() => {\r\n    const allPortfolios = getAllPortfolios();\r\n    setFirstPortfolio(allPortfolios[0]);\r\n    setSecondPortfolio(allPortfolios[1]);\r\n    setOption(() =>\r\n      loadChart(optionData, \"Max\", \"SGD\", allPortfolios[0], allPortfolios[1])\r\n    );\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <ChartContext.Provider\r\n        value={{\r\n          currency,\r\n          setCurrency,\r\n          filterType,\r\n          setFilterType,\r\n          option,\r\n          setOption,\r\n          firstPortfolio,\r\n          secondPortfolio,\r\n          setSecondPortfolio,\r\n        }}\r\n      >\r\n        <FilterPane></FilterPane>\r\n        <ChartHeader></ChartHeader>\r\n        <Chart></Chart>\r\n      </ChartContext.Provider>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ChartOverview;\r\n","import React from \"react\";\r\nimport ChartOverview from \"./chartOverview\";\r\nimport { Layout, Breadcrumb } from \"antd\";\r\n\r\nconst { Content, Footer } = Layout;\r\n\r\nfunction App() {\r\n  return (\r\n    <Layout className=\"layout\">\r\n      <Content style={{ padding: \"0 50px\" }}>\r\n        <Breadcrumb style={{ margin: \"16px 0\" }}></Breadcrumb>\r\n        <div className=\"site-layout-content\">\r\n          <ChartOverview></ChartOverview>\r\n        </div>\r\n      </Content>\r\n      <Footer style={{ textAlign: \"center\" }}>\r\n        Portfolio Performance ©2020\r\n      </Footer>\r\n    </Layout>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport { render } from \"react-dom\";\r\nimport App from \"./components/App\";\r\nimport \"../node_modules/bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"../node_modules/antd/dist/antd.css\";\r\nimport \"./index.css\";\r\n\r\nrender(<App />, document.getElementById(\"root\"));\r\n\r\nexport default App;\r\n"],"sourceRoot":""}